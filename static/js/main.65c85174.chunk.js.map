{"version":3,"sources":["App.js","index.js"],"names":["App","useState","groceryItem","setGroceryItem","groceryList","setGroceryList","groceryItemIndex","setGroceryItemIndex","isCleared","setIsCleared","isAdded","setIsAdded","isEditing","setIsEditing","isValueChanged","setIsValueChanged","useEffect","timer","setTimeout","clearTimeout","className","onSubmit","e","preventDefault","newGroceryList","map","grocery","index","type","name","id","value","onChange","target","placeholder","onClick","newGrocery","i","editGrocery","icon","faEdit","filter","deleteGrocery","faTrash","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAyHeA,MArHf,WACE,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAgDJ,mBAAS,MAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KACA,EAAkCN,oBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAkCV,oBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAA4CZ,oBAAS,GAArD,mBAAOa,EAAP,KAAuBC,EAAvB,KA+DA,OAXAC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBT,GAAa,GACbE,GAAW,GACXI,GAAkB,KACjB,KACH,OAAO,WACLI,aAAaF,MAEd,CAACT,EAAWE,EAASI,IAGtB,iCACGJ,GAAW,mBAAGU,UAAU,kBAAb,oCACXZ,GAAa,mBAAGY,UAAU,oBAAb,wBACbN,GAAkB,mBAAGM,UAAU,uBAAb,2BACnB,6CACA,uBAAMC,SAnEe,SAACC,GACxB,GAAKV,EAME,CACLU,EAAEC,iBACF,IAAMC,EAAiBpB,EAAYqB,KAAI,SAACC,EAASC,GAI/C,OAHIA,IAAUrB,IACZoB,EAAUxB,GAELwB,KAETX,GAAkB,GAClBJ,GAAW,GACXF,GAAa,GACbJ,EAAemB,GACfX,GAAa,QAjBbS,EAAEC,iBACFlB,EAAe,GAAD,mBAAKD,GAAL,CAAkBF,KAChCO,GAAa,GACbE,GAAW,GACXI,GAAkB,GAepBZ,EAAe,KA8Cb,UACE,uBACEyB,KAAK,OACLC,KAAK,cACLC,GAAG,cACHC,MAAO7B,EACP8B,SAAU,SAACV,GAAD,OAAOnB,EAAemB,EAAEW,OAAOF,QACzCG,YAAY,cAEd,wBAAQN,KAAK,SAAb,SAAuBhB,EAAY,OAAS,cAE9C,kCACGR,EAAYqB,KAAI,SAACvB,EAAayB,GAC7B,OACE,sBAAKP,UAAU,cAAf,UACE,4BAAIlB,IACJ,iCACE,cAAC,IAAD,CACEkB,UAAU,WACVe,QAAS,kBAvDL,SAACR,GACnBd,GAAa,GACb,IAAMuB,EAAahC,EAAYqB,KAAI,SAACC,EAASW,GAK3C,OAJIA,IAAMV,IACRxB,EAAeuB,GACfnB,EAAoBoB,IAEfD,KAETrB,EAAe+B,GA8CcE,CAAYX,IAC3BY,KAAMC,MAER,cAAC,IAAD,CACEpB,UAAU,YACVe,QAAS,kBAhDH,SAACR,GACrB,IAAIH,EAAiBpB,EAAYqC,QAAO,SAACf,EAASW,GAChD,OAAOA,IAAMV,KAEftB,EAAemB,GA4CckB,CAAcf,IAC7BY,KAAMI,WAXsBhB,QAkBvCvB,EAAYwC,OAAS,GACpB,wBAAQxB,UAAU,mBAAmBe,QA5Eb,WAC5B9B,EAAe,IACfM,GAAW,GACXF,GAAa,GACbM,GAAkB,IAwEd,6BC5GR8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.65c85174.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction App() {\n  const [groceryItem, setGroceryItem] = useState(\"\");\n  const [groceryList, setGroceryList] = useState([]);\n  const [groceryItemIndex, setGroceryItemIndex] = useState(null);\n  const [isCleared, setIsCleared] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [isValueChanged, setIsValueChanged] = useState(false);\n\n  const handleFormSubmit = (e) => {\n    if (!isEditing) {\n      e.preventDefault();\n      setGroceryList([...groceryList, groceryItem]);\n      setIsCleared(false);\n      setIsAdded(true);\n      setIsValueChanged(false);\n    } else {\n      e.preventDefault();\n      const newGroceryList = groceryList.map((grocery, index) => {\n        if (index === groceryItemIndex) {\n          grocery = groceryItem;\n        }\n        return grocery;\n      });\n      setIsValueChanged(true);\n      setIsAdded(false);\n      setIsCleared(false);\n      setGroceryList(newGroceryList);\n      setIsEditing(false);\n    }\n    setGroceryItem(\"\");\n  };\n\n  const handleClearItemsClick = () => {\n    setGroceryList([]);\n    setIsAdded(false);\n    setIsCleared(true);\n    setIsValueChanged(false);\n  };\n\n  const editGrocery = (index) => {\n    setIsEditing(true);\n    const newGrocery = groceryList.map((grocery, i) => {\n      if (i === index) {\n        setGroceryItem(grocery);\n        setGroceryItemIndex(index);\n      }\n      return grocery;\n    });\n    setGroceryList(newGrocery);\n  };\n\n  const deleteGrocery = (index) => {\n    let newGroceryList = groceryList.filter((grocery, i) => {\n      return i !== index;\n    });\n    setGroceryList(newGroceryList);\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsCleared(false);\n      setIsAdded(false);\n      setIsValueChanged(false);\n    }, 3000);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [isCleared, isAdded, isValueChanged]);\n\n  return (\n    <main>\n      {isAdded && <p className=\"alertForAddList\">Item Added To The List</p>}\n      {isCleared && <p className=\"alertForEmptyList\">Empty List</p>}\n      {isValueChanged && <p className=\"alertForValueChanged\">Value Changed</p>}\n      <h1>Grocery Bud</h1>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"groceryItem\"\n          id=\"groceryItem\"\n          value={groceryItem}\n          onChange={(e) => setGroceryItem(e.target.value)}\n          placeholder=\"e.g. eggs\"\n        />\n        <button type=\"submit\">{isEditing ? \"Edit\" : \"Submit\"}</button>\n      </form>\n      <section>\n        {groceryList.map((groceryItem, index) => {\n          return (\n            <div className=\"groceryItem\" key={index}>\n              <p>{groceryItem}</p>\n              <span>\n                <FontAwesomeIcon\n                  className=\"editIcon\"\n                  onClick={() => editGrocery(index)}\n                  icon={faEdit}\n                />\n                <FontAwesomeIcon\n                  className=\"trashIcon\"\n                  onClick={() => deleteGrocery(index)}\n                  icon={faTrash}\n                />\n              </span>\n            </div>\n          );\n        })}\n      </section>\n      {groceryList.length > 0 && (\n        <button className=\"clearItemsButton\" onClick={handleClearItemsClick}>\n          Clear Items\n        </button>\n      )}\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}