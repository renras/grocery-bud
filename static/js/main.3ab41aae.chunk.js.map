{"version":3,"sources":["Modal.js","state.js","App.js","index.js"],"names":["Modal","modalContent","closeModal","modal","useEffect","setTimeout","ref","className","reducer","state","action","type","newGroceryList","groceryList","payload","isModalOpen","groceryItem","filter","id","map","editID","name","isEditing","defaultState","App","useRef","useReducer","dispatch","current","style","backgroundColor","error","onSubmit","e","preventDefault","newItem","Date","getTime","toString","value","onChange","target","placeholder","onClick","icon","faEdit","faTrash","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ab41aae.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst Modal = ({ modalContent, closeModal, modal }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      closeModal();\r\n    }, 3000);\r\n  });\r\n  return (\r\n    <>\r\n      <p ref={modal} className=\"modalContent\">\r\n        {modalContent}\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export const reducer = (state, action) => {\r\n  if (action.type === \"ADD_ITEM\") {\r\n    const newGroceryList = [...state.groceryList, action.payload];\r\n    return {\r\n      ...state,\r\n      groceryList: newGroceryList,\r\n      isModalOpen: true,\r\n      modalContent: \"item added\",\r\n      groceryItem: \"\",\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE_ITEM\") {\r\n    const newGroceryList = state.groceryList.filter(\r\n      (groceryItem) => groceryItem.id !== action.payload\r\n    );\r\n    return {\r\n      ...state,\r\n      groceryList: newGroceryList,\r\n      modalContent: \"item removed\",\r\n      isModalOpen: true,\r\n    };\r\n  }\r\n  if (action.type === \"CLEAR_ITEMS\") {\r\n    return {\r\n      ...state,\r\n      groceryList: [],\r\n      modalContent: \"items cleared\",\r\n      isModalOpen: true,\r\n    };\r\n  }\r\n  if (action.type === \"EDIT_ITEM\") {\r\n    const newGroceryList = state.groceryList.map((groceryItem) => {\r\n      if (groceryItem.id === state.editID) {\r\n        groceryItem.name = state.groceryItem;\r\n      }\r\n      return groceryItem;\r\n    });\r\n    return {\r\n      ...state,\r\n      groceryList: newGroceryList,\r\n      isEditing: false,\r\n      groceryItem: \"\",\r\n      isModalOpen: false,\r\n    };\r\n  }\r\n  if (action.type === \"EDITING_MODE\") {\r\n    return {\r\n      ...state,\r\n      modalContent: \"enter new name\",\r\n      groceryItem: action.payload.name,\r\n      isEditing: true,\r\n      editID: action.payload.id,\r\n      isModalOpen: true,\r\n    };\r\n  }\r\n  if (action.type === \"INPUT_ON_CHANGE\") {\r\n    return {\r\n      ...state,\r\n      groceryItem: action.payload,\r\n    };\r\n  }\r\n  if (action.type === \"CLOSE_MODAL\") {\r\n    return {\r\n      ...state,\r\n      isModalOpen: false,\r\n    };\r\n  }\r\n};\r\n\r\nexport const defaultState = {\r\n  groceryList: [],\r\n  isModalOpen: false,\r\n  modalContent: \"\",\r\n  isEditing: false,\r\n  groceryItem: \"\",\r\n  editID: null,\r\n};\r\n","import React, { useEffect, useRef, useReducer } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"./Modal\";\nimport { reducer } from \"./state\";\nimport { defaultState } from \"./state\";\n\nfunction App() {\n  const modal = useRef(null);\n  const [state, dispatch] = useReducer(reducer, defaultState);\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    if (state.groceryItem && !state.isEditing) {\n      const newItem = {\n        id: new Date().getTime().toString(),\n        name: state.groceryItem,\n      };\n      dispatch({ type: \"ADD_ITEM\", payload: newItem });\n    } else if (state.groceryItem && state.isEditing) {\n      dispatch({ type: \"EDIT_ITEM\" });\n    } else {\n      dispatch({ type: \"NO_VALUE\" });\n    }\n  };\n\n  useEffect(() => {\n    try {\n      if (\n        state.modalContent === \"item removed\" ||\n        state.modalContent === \"items cleared\"\n      ) {\n        modal.current.style.backgroundColor = \"#ff9999\";\n      } else {\n        modal.current.style.backgroundColor = \"#e9fce9\";\n      }\n    } catch (error) {}\n  });\n\n  const closeModal = () => {\n    dispatch({ type: \"CLOSE_MODAL\" });\n  };\n\n  return (\n    <main>\n      {state.isModalOpen && (\n        <Modal\n          closeModal={closeModal}\n          modal={modal}\n          modalContent={state.modalContent}\n        />\n      )}\n      <h1>Grocery Bud</h1>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"groceryItem\"\n          id=\"groceryItem\"\n          value={state.groceryItem}\n          onChange={(e) =>\n            dispatch({ type: \"INPUT_ON_CHANGE\", payload: e.target.value })\n          }\n          placeholder=\"e.g. eggs\"\n        />\n        <button type=\"submit\">{state.isEditing ? \"edit\" : \"submit\"}</button>\n      </form>\n      <section>\n        {state.groceryList.map((groceryItem) => {\n          return (\n            <div className=\"groceryItem\" key={groceryItem.id}>\n              <p>{groceryItem.name}</p>\n              <span>\n                <FontAwesomeIcon\n                  className=\"editIcon\"\n                  onClick={() =>\n                    dispatch({ type: \"EDITING_MODE\", payload: groceryItem })\n                  }\n                  icon={faEdit}\n                />\n                <FontAwesomeIcon\n                  className=\"trashIcon\"\n                  onClick={() =>\n                    dispatch({ type: \"REMOVE_ITEM\", payload: groceryItem.id })\n                  }\n                  icon={faTrash}\n                />\n              </span>\n            </div>\n          );\n        })}\n      </section>\n      {state.groceryList.length > 0 && (\n        <button\n          className=\"clearItemsButton\"\n          onClick={() => dispatch({ type: \"CLEAR_ITEMS\" })}\n        >\n          Clear Items\n        </button>\n      )}\n    </main>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}